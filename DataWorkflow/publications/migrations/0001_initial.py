# Generated by Django 3.0.3 on 2020-04-21 16:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the affiliation. If a research group name has already been used for the creator, then the organisation to which thisgroup formally belongs could be used here.', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AffiliationIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Uniquely identifies an item according to various schemas.', max_length=200)),
                ('identifier_schema', models.CharField(help_text='Name of the identifier schema.', max_length=200)),
                ('schema_uri', models.URLField(help_text='URI of the identifier schema.', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given_name', models.CharField(blank=True, help_text='Personal or first name of the creator.', max_length=50, null=True)),
                ('family_name', models.CharField(blank=True, help_text='Surname or last name of the creator.', max_length=50, null=True)),
                ('affiliation', models.ForeignKey(blank=True, help_text='Organisational or institutional affiliation of the creator.', null=True, on_delete=django.db.models.deletion.PROTECT, to='publications.Affiliation')),
            ],
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.CharField(help_text='Unique identifier that identifies a resource. This can relate to a specific version or all versions.', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='IdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of an identifier type', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='NameIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(help_text='Uniquely identifies an item according to various schemas.', max_length=200)),
                ('identifier_schema', models.CharField(help_text='Name of the identifier schema.', max_length=200)),
                ('schema_uri', models.URLField(help_text='URI of the identifier schema.', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NameType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Type of name', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.ForeignKey(help_text='Main researchers involved in the publication, or authors of the publication,in order of priority. This can be an organisation or a person.', on_delete=django.db.models.deletion.PROTECT, to='publications.Creator')),
                ('identifier', models.OneToOneField(help_text='Unique identifier that identifies a resource. This can relate to a specific version or all versions.', on_delete=django.db.models.deletion.PROTECT, to='publications.Identifier')),
            ],
        ),
        migrations.AddField(
            model_name='identifier',
            name='type',
            field=models.ForeignKey(help_text='Type of identifier', on_delete=django.db.models.deletion.PROTECT, to='publications.IdentifierType'),
        ),
        migrations.CreateModel(
            name='CreatorName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the creator. For a personal name, the format should be family name,given name. Non-roman names may be transliterated according to ALA-LC schemas.', max_length=100)),
                ('type', models.ForeignKey(blank=True, help_text='The type of name.', null=True, on_delete=django.db.models.deletion.PROTECT, to='publications.NameType')),
            ],
        ),
        migrations.AddField(
            model_name='creator',
            name='name',
            field=models.OneToOneField(help_text='Creator of the publication.', on_delete=django.db.models.deletion.PROTECT, to='publications.CreatorName'),
        ),
        migrations.AddField(
            model_name='creator',
            name='name_identifier',
            field=models.ForeignKey(blank=True, help_text='Uniquely identifies an individual or organisation according to various schemas.', null=True, on_delete=django.db.models.deletion.PROTECT, to='publications.NameIdentifier'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='identifier',
            field=models.OneToOneField(blank=True, help_text='Uniquely identifies the organisational affiliation of the creator.', max_length=200, null=True, on_delete=django.db.models.deletion.PROTECT, to='publications.AffiliationIdentifier'),
        ),
    ]
